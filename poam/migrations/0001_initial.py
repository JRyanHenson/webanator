# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-06 17:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('hardware', models.CharField(max_length=32)),
                ('software', models.CharField(max_length=32)),
                ('ip', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='DeviceWeakness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weaknesses', to='poam.Device')),
            ],
            options={
                'db_table': 'device_weakness',
            },
        ),
        migrations.CreateModel(
            name='PointOfContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=256)),
                ('phone', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'point_of_contact',
            },
        ),
        migrations.CreateModel(
            name='SecurityControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('title', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'security_control',
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('update_date', models.DateTimeField()),
                ('create_date', models.DateField(auto_now_add=True)),
                ('dod_component', models.CharField(max_length=8)),
                ('dod_it_resource_number', models.CharField(max_length=32)),
                ('system_type', models.CharField(max_length=16)),
                ('point_of_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='systems', to='poam.PointOfContact')),
            ],
            options={
                'db_table': 'system',
            },
        ),
        migrations.CreateModel(
            name='Weakness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('mitigation', models.TextField()),
                ('resources_required', models.CharField(max_length=16)),
                ('scheduled_completion_date', models.DateField()),
                ('milestone_changes', models.CharField(max_length=16)),
                ('status', models.CharField(choices=[('ao_accepted_risk', 'AO Accepted Risk'), ('closed', 'Closed'), ('ongoing', 'Ongoing')], max_length=32)),
                ('comments', models.TextField()),
                ('raw_severity', models.CharField(choices=[('1', 'I'), ('2', 'II'), ('3', 'III')], max_length=1)),
                ('mitigated_severity', models.CharField(choices=[('null', ''), ('1', 'I'), ('2', 'II'), ('3', 'III')], max_length=4)),
                ('source_identifying_date', models.DateField()),
                ('source_identifying_event', models.CharField(max_length=32)),
                ('source_identifying_tool', models.CharField(max_length=32)),
                ('vuln_id', models.CharField(max_length=16)),
                ('check_contents', models.TextField()),
                ('fix_text', models.TextField()),
                ('point_of_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weaknesses', to='poam.PointOfContact')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weaknesses', to='poam.System')),
            ],
            options={
                'db_table': 'weakness',
            },
        ),
        migrations.CreateModel(
            name='WeaknessSecurityControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('security_control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weaknesses', to='poam.SecurityControl')),
                ('weakness', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_controls', to='poam.Weakness')),
            ],
            options={
                'db_table': 'weakness_security_control',
            },
        ),
        migrations.AddField(
            model_name='deviceweakness',
            name='weakness',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='poam.Weakness'),
        ),
        migrations.AddField(
            model_name='device',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='poam.System'),
        ),
        migrations.AlterUniqueTogether(
            name='weaknesssecuritycontrol',
            unique_together=set([('security_control', 'weakness')]),
        ),
        migrations.AlterUniqueTogether(
            name='deviceweakness',
            unique_together=set([('device', 'weakness')]),
        ),
    ]
